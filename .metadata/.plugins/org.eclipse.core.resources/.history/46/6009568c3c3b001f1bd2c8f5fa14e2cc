package br.com.lmv.APIContatos.resouce;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import br.com.lmv.APIContatos.model.Pessoa;
import br.com.lmv.APIContatos.service.PessoaService;

@RestController
@RequestMapping("/api/pessoas")
public class PessoaResource {

	@Autowired
	PessoaService pessoaService;
	
	@GetMapping("pessoa")
	public ResponseEntity<Pessoa> getPessoa() {
		Pessoa pessoa = new Pessoa();
		pessoa.setCep("138430-023");
		pessoa.setNome("Lucas Marques");
		pessoa.setEndereco("Rua Do Brasil");
		pessoa.setUf("SP");
		pessoa.setCidade("São Paulo");
		
		return ResponseEntity.ok(pessoa);
	}
	
	@GetMapping("salvar2")
	public ResponseEntity<Pessoa> save2() {
		Pessoa pessoa = new Pessoa();
		pessoa.setCep("138430-023");
		pessoa.setNome("Lucas Marques");
		pessoa.setEndereco("Rua Do Brasil");
		pessoa.setUf("SP");
		pessoa.setCidade("São Paulo");
		
		Pessoa pessoaResposta = pessoaService.save(pessoa);
		if(pessoaResposta == null) {
			ResponseEntity.notFound().build();
		}
		return ResponseEntity.ok(pessoaResposta);
	}
	
	@GetMapping
	public ResponseEntity<List<Pessoa>> findAllPessoas(){
		List<Pessoa> pessoas = pessoaService.findAll();
		if(pessoas == null || pessoas.size() == 0 || pessoas.isEmpty()) {
			return ResponseEntity.notFound().build();
		}
		return ResponseEntity.ok(pessoas);
	}
	
	@GetMapping ("/{id}")
	public ResponseEntity<Optional<Pessoa>> findById(@PathVariable Long id){
		Optional<Pessoa> pessoa = pessoaService.findById(id);
		if(pessoa == null || pessoa.isEmpty()) {
			return ResponseEntity.notFound().build();
		}
		return ResponseEntity.ok(pessoa);
	}
	
	@PostMapping
	public ResponseEntity<Pessoa> save(@RequestBody Pessoa pessoa){
		Pessoa newPessoa = pessoaService.save(pessoa);
		if(newPessoa == null)
			return ResponseEntity.notFound().build();
		
		return ResponseEntity.ok(newPessoa);
	}
}
