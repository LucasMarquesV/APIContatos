package br.com.lmv.APIContatos.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import br.com.lmv.APIContatos.model.Pessoa;
import br.com.lmv.APIContatos.repository.PessoaRepository;

@Service
public class PessoaService {

	@Autowired
	PessoaRepository pessoaRepository;

	public Pessoa save(Pessoa pessoa) {
		if (pessoa.getNome() == null) {
			System.out.println("Campo de nome da pessoa vazio.");
			return null;
		}

		try {
			return pessoaRepository.save(pessoa);
		} catch (Exception e) {
			System.out.println("Erro ao inserir pessoa " + pessoa.toString() + ": " + e.getMessage());
			return null;
		}
	}

	public List<Pessoa> findAll() {
		return pessoaRepository.findAll();
	}

	public Optional<Pessoa> findById(Long id) {
		return pessoaRepository.findById(id);
	}

	public Pessoa update(Pessoa pessoa) {
		Optional<Pessoa> foundPessoa = pessoaRepository.findById(pessoa.getId());

		if (foundPessoa.isPresent()) {
			Pessoa updatedPessoa = foundPessoa.get();
			updatedPessoa.setCep(pessoa.getCep());
			updatedPessoa.setCidade(pessoa.getCidade());
			updatedPessoa.setEndereco(pessoa.getEndereco());
			updatedPessoa.setNome(pessoa.getNome());
			updatedPessoa.setUf(pessoa.getUf());
			return pessoaRepository.save(updatedPessoa);
		}
		return pessoaRepository.save(pessoa);
	}

	public void delete(Long id) {
		pessoaRepository.deleteById(id);
	}

	public void findPessoaWithContatos(Long id) {
		Optional<Object[]> response = pessoaRepository.findPessoaWithContatos(id);
		System.out.println("teste");
		/*
		 * Optional<PessoaDTO> listPessoaDTO = new ArrayList<PessoaDTO>();
		 * 
		 * PessoaDTO pDTO = returnBDProdutoDTO(response); listPessoaDTO.add(pDTO);
		 * 
		 * return listProdutoDTO;
		 */
	}

}
